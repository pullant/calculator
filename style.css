@font-face {
	font-family: 'JetBrainsMono';
	src: url('./fonts/JetBrainsMono-Regular.woff2') format('woff2');
}

body {
	display: flex;
	align-items: center;
	justify-content: center;
	background-color: darkslategray ;
	height: 100dvh;
	margin: 0;
}

main {
	font-family: JetBrainsMono, monospace;
	color: darkslategray;
	display: flex;
	flex-direction: column;
	height: 80dvh;
	width: 60dvh;
	margin-right: 1dvh;
}
main > * {
	flex: 1;
	margin-top: 1dvh;
}

#history,
#display {
	color: white;
	margin-left: 3dvh;
	margin-right: 2dvh;
	overflow: auto;
	white-space: nowrap;
	scrollbar-color: slategray darkslategray;
}
#display {
	font-size: 4dvh;
}
#history {
	font-size: 2dvh;
}

#operators,
#first-row,
#second-row,
#third-row,
#forth-row {
	display: flex;
	user-select: none; /*prevent selection when double click numbers*/
}

#operators > *,
#first-row > *,
#second-row > *,
#third-row > *,
#forth-row > * {
	flex: 1;
	display: flex;
	align-items: center;
	justify-content: center;
	margin-left: 1dvh;
}
#operators > * {
	border-radius: 50%;
	background-color: slategray;
}
#first-row > *,
#second-row > *,
#third-row > *,
#forth-row > * {
	font-size: 3dvh;
	border-radius: 35%;
	background-color: peachpuff;
}

#operators > * > * {
	width: 20%;
	pointer-events: none; /* Make the image non-interactive so click triggers events */
}

#zero {
	flex: 2; /* 2 1 0% */
	flex-basis: 1dvh;
	border-radius: 50%;
}

#backspace {
	border-radius: 20%;
}

#clear {
	background-color: salmon;
	border-radius: 20%;
}

#equalsA {
	background-color: darkseagreen;
	border-top-left-radius: 20%;
	border-top-right-radius: 20%;
	border-bottom-left-radius: 0%;
	border-bottom-right-radius: 0%;
}
#equalsB {
	background-color: darkseagreen;
	align-items: flex-start;
	border-top-left-radius: 0%;
	border-top-right-radius: 0%;
	border-bottom-left-radius: 20%;
	border-bottom-right-radius: 20%;
	margin-top: -2dvh;
}
#equalsB > * {
	width: 20%;
	margin-top: calc(((60dvh - 4dvh) / 4 * 0.20 * ( 8.1280003 / 10.921991 ) / 2 * -1 ) + 1.5dvh);
	/*
	(page width - margins) / (4 elements in row) => width of container
	 * (size of image width: 20% ) => width of image
	 * (ratio H / W) => height of the image
	 / 2 (moved it half way) (make it negative) => centered based on width on the edge of container
	 - (half margin of default container) */
	pointer-events: none;
}
